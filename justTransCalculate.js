const generatePoints = (xDisArr, zDisArr) => {
    // 计算每对点的高度（z坐标）
    const zCoords = [zDisArr.reduce((sum, val) => sum + val, 0)] // 初始高度为所有z差之和
    for (let i = 0; i < zDisArr.length; i++) {
        zCoords.push(zCoords[i] - zDisArr[i])
    }
    // 生成所有点的坐标（L4的中点设为原点）
    const points = []
    for (let i = 0; i < zCoords.length; i++) {
        const z = zCoords[i]
        const xDistance = xDisArr[i];
        const x1 = xDistance / 2  // 右侧点
        const x2 = -xDistance / 2 // 左侧点
        points.push([x1, z])
        points.push([x2, z])
    }
    // 平移所有点，使L4的中点为 (0,0)
    const pair4MidX = (points[6][0] + points[7][0]) / 2;
    const pair4MidZ = (points[6][1] + points[7][1]) / 2;
    const outputPoints = points.map(([x, z]) => [
        x - pair4MidX,
        z - pair4MidZ
    ])
    return outputPoints
}

let bsi_005_dis_x = [7.085, 6.951, 7.999, 7.534, 7.368, 6.086, 4.601]
let bsi_005_dis_z = [14.037, 12.004, 6.048, 6.014, 8.099, 4.227]

console.log(generatePoints(bsi_005_dis_x, bsi_005_dis_z))

bsi_005_op = [
    [1, 3.5425, 32.089],
    [1, -3.5425, 32.089],
    [1, 3.4755, 18.052],
    [1, -3.4755, 18.052],
    [1, 3.9995, 6.048],
    [1, -3.9995, 6.048],
    [1, 3.767, 0],
    [1, -3.767, 0],
    [1, 3.684, -6.014],
    [1, -3.684, -6.014],
    [1, 3.043, -14.113],
    [1, -3.043, -14.113],
    [1, 2.3005, -18.34],
    [1, -2.3005, -18.34]
]

bsi_007_op = [
    [2, 4.0475, 28.063],
    [2, -4.0475, 28.063],
    [2, 4.049, 22.034],
    [2, -4.049, 22.034],
    [2, 4.2065, 10.03],
    [2, -4.2065, 10.03],
    [2, 3.8885, 0],
    [2, -3.8885, 0],
    [2, 3.49, -4.328],
    [2, -3.49, -4.328],
    [2, 1.278, -12.518],
    [2, -1.278, -12.518],
    [2, 1.584, -20.623],
    [2, -1.584, -20.623]
]

bsi_008_op = [
    [3, 3.6575, 32.252],
    [3, -3.6575, 32.252],
    [3, 3.687, 22.247],
    [3, -3.687, 22.247],
    [3, 4.335, 6.194],
    [3, -4.335, 6.194],
    [3, 3.9505, 0],
    [3, -3.9505, 0],
    [3, 3.3895, -10.015],
    [3, -3.3895, -10.015],
    [3, 1.8805, -24.091],
    [3, -1.8805, -24.091],
    [3, 1.8895, -30.183],
    [3, -1.8895, -30.183]
]

// op.forEach(e => {
//     let newArr = [3, ...e]
//     e = newArr
// })